#!/usr/bin/env python
from waflib.extras import autowaf as autowaf

top = '.'
out = 'build'

def options(opt):
    autowaf.set_options(opt)

def configure(conf):
    conf.load('misc')
    conf.load('compiler_cxx')
    autowaf.check_pkg(conf, 'luabind', uselib_store='LUABIND', mandatory=False)
    conf.check_cc(function_name='readline',
            header_name='readline/readline.h',
            lib='readline',
            uselib_store='READLINE',
            mandatory=False)
    autowaf.configure(conf)

def build(bld):
    if not bld.is_defined('HAVE_READLINE'):
            return;
    if bld.env['build_target'] == 'mingw':
            return;

    obj = bld (features = 'cxx c cxxprogram')
    obj.source       = 'memtest.cc'
    obj.target       = 'memtest'
    obj.install_path = None

    obj = bld (features = 'cxx c cxxprogram')
    obj.source       = 'devel.cc'
    obj.target       = 'devel'
    obj.uselib       = ['SIGCPP', 'READLINE']
    obj.use          = ['liblua']
    obj.install_path = None

    if bld.is_defined('HAVE_LUABIND'):
        obj = bld (features = 'cxx c cxxprogram')
        obj.source       = 'lb.cc'
        obj.target       = 'lb'
        obj.uselib       = ['SIGCPP', 'READLINE', 'LUABIND']
        obj.use          = ['liblua']
        obj.install_path = None
